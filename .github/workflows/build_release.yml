name: Build Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_windows:
    name: Build for Windows (MSVC, x86_64)
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Cache SCons build
        uses: actions/cache@v3
        with:
          path: |
            .sconsign.dblite
            addons/Gedis/bin
          key: ${{ runner.os }}-scons-${{ hashFiles('**/SConstruct') }}
          restore-keys: |
            ${{ runner.os }}-scons-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install SCons
        run: pip install scons

      - name: Set up MSVC developer command prompt
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build godot-cpp
        run: |
          cd godot-cpp
          scons platform=windows generate_bindings=yes
          scons platform=windows target=template_release
      - name: Build with SCons
        run: scons platform=windows target=template_release arch=x86_64

      - name: Package addon
        run: |
          mkdir -p package/addons
          cp -r addons/Gedis package/addons/
          cd package
          zip -r ../gedis-windows-x86_64.zip .
          cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gedis-windows-x86_64
          path: gedis-windows-x86_64.zip

  build_macos:
    name: Build for macOS (universal)
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Cache SCons build
        uses: actions/cache@v3
        with:
          path: |
            .sconsign.dblite
            addons/Gedis/bin
          key: ${{ runner.os }}-scons-${{ hashFiles('**/SConstruct') }}
          restore-keys: |
            ${{ runner.os }}-scons-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install SCons
        run: brew install scons

      - name: Build godot-cpp
        run: |
          cd godot-cpp
          scons platform=macos generate_bindings=yes
          scons platform=macos target=template_release
      - name: Build with SCons
        run: scons platform=macos target=template_release arch=universal

      - name: Package addon
        run: |
          mkdir -p package/addons
          cp -r addons/Gedis package/addons/
          cd package
          zip -r ../gedis-macos-universal.zip .
          cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gedis-macos-universal
          path: gedis-macos-universal.zip

  build_linux:
    name: Build for Linux (GCC, x86_64)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set up dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential scons pkg-config libx11-dev libxcursor-dev libxinerama-dev libgl1-mesa-dev libglu1-mesa-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm

      - name: Cache SCons build
        uses: actions/cache@v3
        with:
          path: |
            .sconsign.dblite
            addons/Gedis/bin
          key: ${{ runner.os }}-scons-${{ hashFiles('**/SConstruct') }}
          restore-keys: |
            ${{ runner.os }}-scons-

      - name: Build godot-cpp
        run: |
          cd godot-cpp
          scons platform=linux generate_bindings=yes
          scons platform=linux target=template_release
      - name: Build with SCons
        run: scons platform=linux target=template_release arch=x86_64

      - name: Package addon
        run: |
          mkdir -p package/addons
          cp -r addons/Gedis package/addons/
          cd package
          zip -r ../gedis-linux-x86_64.zip .
          cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gedis-linux-x86_64
          path: gedis-linux-x86_64.zip

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build_windows, build_macos, build_linux]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Combine builds
        run: |
          mkdir -p release_package
          unzip artifacts/gedis-windows-x86_64/gedis-windows-x86_64.zip -d release_package
          unzip artifacts/gedis-macos-universal/gedis-macos-universal.zip -d temp_macos
          unzip artifacts/gedis-linux-x86_64/gedis-linux-x86_64.zip -d temp_linux
          cp -r temp_macos/addons/Gedis/bin/* release_package/addons/Gedis/bin/
          cp -r temp_linux/addons/Gedis/bin/* release_package/addons/Gedis/bin/
          cd release_package
          zip -r ../gedis-release.zip .
          cd ..

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gedis-release.zip
          asset_name: gedis-${{ github.ref_name }}.zip
          asset_content_type: application/zip