name: Build Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            platform: windows
            arch: x86_64
            artifact_name: gedis-windows-x86_64
          - os: macos-latest
            platform: macos
            arch: universal
            artifact_name: gedis-macos-universal
          - os: ubuntu-latest
            platform: linux
            arch: x86_64
            artifact_name: gedis-linux-x86_64
    name: Build for ${{ matrix.platform }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential scons pkg-config libx11-dev libxcursor-dev libxinerama-dev libgl1-mesa-dev libglu1-mesa-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm

      - name: Cache SCons build
        uses: actions/cache@v4
        with:
          path: |
            .sconsign.dblite
            addons/Gedis/bin
          key: ${{ runner.os }}-scons-${{ hashFiles('**/SConstruct') }}
          restore-keys: |
            ${{ runner.os }}-scons-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install SCons
        run: pip install scons

      - name: Set up MSVC developer command prompt
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Cache godot-cpp build
        id: cache-godotcpp
        uses: actions/cache@v4
        with:
          path: |
            godot-cpp/bin
            godot-cpp/gen
            godot-cpp/.sconsign.dblite
          key: ${{ runner.os }}-godot-cpp-${{ matrix.platform }}-${{ matrix.arch }}-${{ hashFiles('godot-cpp/SConstruct', 'godot-cpp/gdextension/extension_api.json') }}
          restore-keys: |
            ${{ runner.os }}-godot-cpp-${{ matrix.platform }}-${{ matrix.arch }}-
      - name: Build godot-cpp (cache miss)
        if: steps.cache-godotcpp.outputs.cache-hit != 'true'
        run: |
          cd godot-cpp
          scons platform=${{ matrix.platform }} generate_bindings=yes target=template_release
          scons platform=${{ matrix.platform }} generate_bindings=yes target=template_debug
      - name: Build with SCons
        run: scons platform=${{ matrix.platform }} target=template_release arch=${{ matrix.arch }}

      - name: Package addon
        run: |
          mkdir -p package/addons
          cp -r addons/Gedis package/addons/
          cd package
          zip -r ../${{ matrix.artifact_name }}.zip .
          cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}.zip

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Combine builds
        run: |
          mkdir -p release_package
          unzip artifacts/gedis-windows-x86_64/gedis-windows-x86_64.zip -d release_package
          unzip artifacts/gedis-macos-universal/gedis-macos-universal.zip -d temp_macos
          unzip artifacts/gedis-linux-x86_64/gedis-linux-x86_64.zip -d temp_linux
          cp -r temp_macos/addons/Gedis/bin/* release_package/addons/Gedis/bin/
          cp -r temp_linux/addons/Gedis/bin/* release_package/addons/Gedis/bin/
          cd release_package
          zip -r ../gedis-release.zip .
          cd ..

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: gedis-release.zip
          name: gedis-${{ github.ref_name }}.zip